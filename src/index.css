/* Reset and box-sizing */
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body,
#root,
.app-container,
.home-container {
  overflow-x: hidden;
  display: block !important;
  height: auto !important;
  min-height: 0 !important;
  overflow: visible !important;
}

/* 2) Let the body scroll naturally */
body {
  overflow-y: auto !important;
}

/* 3) Remove any hidden overflow on blurrable-content */
.blurrable-content {
  overflow: visible !important;
}

/* 4) Ensure each section stacks vertically */
.center-container,
.content-container,
.timeline-container {
  position: static !important;
  top: auto !important;
  bottom: auto !important;
  left: auto !important;
  right: auto !important;
  transform: none !important;
}
/* CSS Variables */
:root {
  --font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  --font-size-base: 16px;
  --line-height: 1.5;
  --color-text-light: rgba(255, 255, 255, 0.87);
  --color-bg-dark: #242424;
  --color-link: #646cff;
  --color-link-hover: #535bf2;
  --spacing: 1rem;
}

/* Make page height auto so it grows with content */
html, body, #root {
  height: auto;
  width: 100%;
  background-color: #ffffff;
  overflow-x: hidden !important;
}

/* Body uses normal document flow */
body {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  line-height: var(--line-height);
  color: var(--color-text-light);
  background-color: var(--color-bg-dark);
  color-scheme: light dark;
  display: block;
}

/* Links */
a {
  font-weight: 500;
  color: var(--color-link);
  text-decoration: none;
}
a:hover {
  color: var(--color-link-hover);
}

/* Buttons */
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font: inherit;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: var(--color-link);
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* App container layout */
.app-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: auto;
  width: 100%;
  padding: 0 var(--spacing);
  text-align: center;
}

/* Home view wrapper */
.home-container {
  background-color: #ffffff;
  width: 100%;
  min-height: auto;
  overflow-x: hidden;
  display: block;
  margin: 0 auto;
  padding: 0;
}

/* Responsive typography */
h1 {
  font-size: clamp(2rem, 8vw, 5rem);
  font-weight: bold;
  line-height: 1.1;
}

/* ProfileHeader component */
.profile-header {
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0px 0 40px;
  width: 100%;
  text-align: center;
}

/* Desktop-specific ProfileHeader adjustments */
@media (min-width: 601px) {
  .profile-header {
    padding-top: 0; /* Remove top padding on desktop */
    padding-bottom: 20px; /* Reduce bottom padding on desktop */
  }
}

.profile-header .profile-title {
  margin: 0 0 20px 0;
  color: #000000;
  font-size: clamp(2rem, 6vw, 3rem);
  font-weight: 800;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  letter-spacing: -1px;
  max-width: 800px;
  width: 100%;
}
.profile-header .profile-image {
  max-width: 300px;
  width: 60%;
  height: auto;
  border-radius: 12px;
  object-fit: cover;
  display: block;
}

/* GitHubContributions component */
.github-contributions {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin-top: 80px;
  padding: 0;
}
/* Calendar overrides */
.react-activity-calendar text {
  fill: black !important;
  font-weight: bold;
}
.react-activity-calendar {
  color: black !important;
  max-width: 100%;
  margin: 0 auto;
}
.react-activity-calendar span,
.react-activity-calendar summary,
.react-activity-calendar button {
  color: black !important;
}
@media (max-width: 800px) {
  .react-activity-calendar {
    overflow-x: auto;
  }
}

.react-activity-calendar {
  max-width: 100%; /* Don't restrict width on mobile! */
}

@media (max-width: 600px) {
  .github-calendar-container {
    overflow-x: auto !important;
    width: 100vw !important;
    min-width: 0 !important;
    /* Remove max-width restriction on .react-activity-calendar in mobile */
  }
  .react-activity-calendar {
    min-width: 600px !important; /* or whatever is needed so it's scrollable */
    display: block !important;
  }
}


/* Wrapper for the calendar */
.github-calendar-container {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow-x: auto;
  margin: 0 auto;
  padding: 0;
}

/* Timeline section spacing */
.timeline-container {
  width: 100%;
  margin-top: 2rem;
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.github-contributions > div:first-child {
  scrollbar-width: thin;
  scrollbar-color: #bbb #fff;
}

/* ──────────────────────────────────────────────────────────────────────────
   Chatbot (Home-level wrapper)
   ────────────────────────────────────────────────────────────────────────── */
   .home-chat-wrapper {
    width: 100%;
    max-width: 1200px;
    margin: 2rem auto;          /* adjust vertical spacing here */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;         /* so absolute children position to this */
  }
  
  /* internal Chatbot panel */
  .chatbot-wrapper {
    width: 100%;
    max-width: 800px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
    will-change: transform;
  }
  
  /* messages popup above the input */
  .chatbot-messages {
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    margin-bottom: 20px;
    pointer-events: auto;
  }
  
  /* the input trigger sits in-flow by default */
  .chatbot-input-trigger {
    position: relative;
    margin: 2rem auto;
    width: 100%;
    max-width: 800px;
    cursor: pointer;
    transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
  }
  
  /* when anchored, the input floats to the bottom of its container */
  .chatbot-input-trigger.anchored {
    position: absolute !important;
    bottom: 0 !important;
    left: 50% !important;
    transform: translateX(-50%) !important;
    margin: 0 !important;
    width: 90%;
    max-width: 500px;
    cursor: default;
  }
  
  /* wrap the <form> so it can center its contents */
  .chatbot-input-wrapper {
    display: flex;
    justify-content: center;
    width: 100%;
  }
  
  /* ──────────────────────────────────────────────────────────────────────────
     ChatInput form
     ────────────────────────────────────────────────────────────────────────── */
  .chat-input-form {
    display: flex;
    width: 100%;
    max-width: 750px;
    position: relative;
    margin: 0 auto;             /* perfect horizontal centering */
    transition: width 0.3s ease-in-out, max-width 0.3s ease-in-out;
  }

  /* the text field */
  .chat-input-field {
    width: 100%;
    padding: 12px 50px 12px 20px;
    border-radius: 10px;
    border: 1.4px solid #d1d5db;
    font-size: 14px;
    background-color: #ffffff;
    color: #111827;
    outline: none;
    font-family: 'SF Pro Display', system-ui, sans-serif;
    transition: all 0.3s ease-in-out, border 0.3s ease-in-out, padding 0.3s ease-in-out;
  }
  .github-calendar-container::-webkit-scrollbar { display: none; }
  /* the send-button icon */
  .chat-input-submit {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    padding: 4px;
    border: none;
    background: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: default;
  }
  .chat-input-submit.active {
    cursor: pointer;
  }
  .chat-input-submit svg {
    stroke: #9ca3af;
    transition: stroke 0.2s ease;
  }
  .chat-input-submit.active svg {
    stroke: #2563eb;
  }

/* Light mode overrides */
@media (prefers-color-scheme: light) {
  :root {
    --color-text-light: #213547;
    --color-bg-dark: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/* Tighten header & GitHub spacing on shorter viewports */
/* Tighten header & GitHub spacing on shorter viewports */
@media (max-height: 800px) {
  .profile-header {
    /* was 80px 0 40px */
    padding: 60px 0 30px;
  }
  .github-contributions {
    /* was margin-top: var(--spacing) */
    margin-top: -30px;
  }
  .profile-title {
    /* shrink gap between title & image */
    margin-bottom: 1rem;  /* was ~20px */
  }
}

@media (max-height: 600px) {
  .profile-header {
    padding: 40px 0 20px;
  }
  .github-contributions {
    margin-top: 0.25rem;
  }
  .profile-title {
    margin-bottom: 0.5rem;
  }
}
/* Fade out everything except the chat bar when active */
.content-wrapper {
  transition: opacity 0.5s ease-in-out;
}
.content-wrapper.fade {
  opacity: 0.2;
}



/* Hero "top-section" covering full viewport */
.top-section {
  background-color: #ffffff; /* white backdrop */
  width: 100%;
  min-height: 100vh;         /* always at least one screen tall */
  display: flex;
  flex-direction: column;
  justify-content: center;   /* center its children vertically */
}


/* (Existing chatbot-fixed-wrapper + chatbot-fixed-container rules remain unchanged) */

.top-section {
  transition: opacity 0.3s ease-in-out;
}
.top-section.fade {
  opacity: 0.2;
}





/* ─── Animations ────────────────────────────────────────────────────────── */
@keyframes fadeSlideUp {
  from { opacity: 1; transform: translateY(0); }
  to   { opacity: 0; transform: translateY(-50px); }
}

@keyframes fadeSlideIn {
  from { opacity: 0; transform: translateY(50px); }
  to   { opacity: 1; transform: translateY(0); }
}

/* Coordinated animations for chatbot and background content */
@keyframes backgroundMoveUp {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-15px);
  }
}

@keyframes backgroundMoveDown {
  0% {
    transform: translateY(-15px);
  }
  100% {
    transform: translateY(0);
  }
}

/* Improved chatbot animations for smooth movement */
@keyframes chatbotSlideIn {
  0% { 
    opacity: 0; 
    transform: translateX(-50%) translateY(60px);
  }
  70% {
    opacity: 1;
    transform: translateX(-50%) translateY(-4px);
  }
  85% {
    transform: translateX(-50%) translateY(2px);
  }
  100% { 
    opacity: 1; 
    transform: translateX(-50%) translateY(0);
  }
}

@keyframes chatbotSlideOut {
  0% {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(60px);
  }
}

/* Applies to the main content when chatbot is visible */
.blurrable-content {
  will-change: transform;
  animation-duration: 0.6s;
  animation-timing-function: cubic-bezier(0.33, 1, 0.68, 1);
  animation-fill-mode: forwards;
}

.blurrable-content.chat-active {
  animation-name: backgroundMoveUp;
}

.blurrable-content.chat-inactive {
  animation-name: backgroundMoveDown;
}

/* Top‐section (header + GitHub) slides up & fades out when .fade is added */
/* ─── Smooth Fade/Slide Animations ─────────────────────────────────────── */

/* Top‐section (header + GitHub) transitions */
.top-section {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 1;
  transform: translateY(0);
}
.top-section.fade {
  opacity: 0;
  transform: translateY(-50px);
}

/* Conversation‐starters container transitions */
.starters-container {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 0;
  transform: translateY(50px);
}
.starters-container.enter {
  opacity: 1;
  transform: translateY(0);
}

/* ─── Floating Chatbot (bottom‐center) ───────────────────────────────────────── */
.chatbot-fixed-wrapper {
  position: fixed;
  bottom: 0;
  left: 50%;
  width: 100%;
  max-width: 1200px;
  pointer-events: all;
  z-index: 1000;
  transform: translateX(-50%) translateY(0);
  opacity: 1;
  visibility: visible;
  transition: transform 0.3s ease-out, 
              opacity 0.3s ease-out,
              visibility 0s linear;
}

.chatbot-fixed-wrapper.hidden {
  transform: translateX(-50%) translateY(60px);
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
  transition: transform 0.3s ease-in, 
              opacity 0.3s ease-in,
              visibility 0s linear 0.3s;
}

.chatbot-fixed-container {
  display: flex;
  justify-content: center;
  width: 100%;
  padding: 2rem 10rem; /* 2rem top/bottom, 1rem left/right */
}

/* If the viewport is too narrow, reduce padding so it never feels cramped */
/* ─── Chatbot Internals ─────────────────────────────────────────────────────── */
.chatbot-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.chatbot-messages {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  margin-bottom: 20px;
  pointer-events: auto;
}

.chatbot-input-trigger {
  width: 100%;
  max-width: 1200px;
  margin: 2rem auto;
  position: relative;
  transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
}

/* ─── ChatInput Form ───────────────────────────────────────────────────────── */
.chat-input-form {
  display: flex;
  width: min(650px, calc(100% - 10px));
  margin: 0 auto;           /* center it */
  position: relative;
  transition: width 0.3s ease-in-out;
  animation: chatInputAppear 0.5s cubic-bezier(0.16, 1, 0.3, 1);
  animation-delay: 0.2s; /* Start after chatbot wrapper appears */
  animation-fill-mode: backwards; /* Hide before animation starts */
}

/* If you want extra breathing room around the form, adjust the container: */
.chatbot-fixed-container {
  padding: 2rem 5px;         /* 1rem top/bottom, 5px left/right */
}
/* If viewport is narrower than 410px, make form fill available space */
.chat-input-field {
  flex: 1;
  padding: 16px 20px;
  border-radius: 12px;
  border: 1.4px solid #d1d5db;
  font-size: 18px;
  background-color: #ffffff;
  color: #111827;
  outline: none;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  transition: all 0.3s ease-in-out;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  animation: fieldShadowAppear 0.8s cubic-bezier(0.16, 1, 0.3, 1);
  animation-delay: 0.3s; /* Start after input form appears */
  animation-fill-mode: backwards; /* Hide before animation starts */
}

.chat-input-submit {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  padding: 4px;
  border: none;
  background: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: default;
}
.chat-input-submit.active {
  cursor: pointer;
}
.chat-input-submit svg {
  transition: stroke 0.2s ease;
}
.chat-input-submit.active svg {
  stroke: #2563eb;
}

/* ─── Conversation Starters Animation ───────────────────────────────────────── */
.starters-container {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 0;
  transform: translateY(50px);
}
.starters-container.enter {
  opacity: 1;
  transform: translateY(0);
}



/* ─── TimelineItem Styling ───────────────────────────────────────────────── */

/* Ensure SF Pro Display everywhere in the item */
.timeline-item {
  font-family: 'SF Pro Display', system-ui, -apple-system, BlinkMacSystemFont,
               'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

/* HStack wrapper for date/icon + title/subtitle */
.timeline-row {
  display: flex;
  align-items: flex-start;
  gap: 20px; /* matches your JSX gap */
  margin-bottom: 1rem;
}

/* VStack helper */
.timeline-vstack {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

/* Left column overrides (centers icon) */
.timeline-left {
  width: 100px; /* your JSX width */
  align-items: center;
  text-align: center;
}

/* Date text */
.timeline-date {
  font-size: 18px;
  color: gray;
  margin: 0;
}

/* Icon */
.timeline-icon {
  width: 60px;
  height: 60px;
  object-fit: contain;
  margin-top: 10px;
}

/* Title + subtitle block */
.timeline-title-block .timeline-title {
  font-size: 28px;
  font-weight: 800;
  margin: 0;
}

.timeline-title-block .subtitle {
  font-size: 20px;
  font-weight: 650;
  margin: 0;
  color: #555;
}

/* Main content */
.timeline-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-left: calc(100px + 20px); /* indent under the row */
}

.timeline-content img {
  max-width: min(650px, 70vw);
  width: 100%;
  height: auto;
  border-radius: 8px;
}

/* Description paragraphs */
.description {
  margin: 0;
  line-height: 1.5;
}

/* Tech stack */
.timeline-techstack {
  display: flex;
  gap: 15px;
}

.timeline-techstack img {
  width: 24px;
  height: 24px;
}

/* Links & buttons */
.timeline-learnmore,
.timeline-expand-button {
  font-size: 0.875rem;
  padding: 0.25rem 0.5rem;
  text-decoration: none;
  cursor: pointer;
}

.timeline-learnmore {
  color: var(--color-link);
  transition: opacity 0.2s ease;
}

.timeline-learnmore:hover {
  opacity: 1;
}

.timeline-expand-button {
  background-color: var(--color-link);
  color: #fff;
  border: none;
  border-radius: 4px;
}

.timeline-item {
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  width: 100vw;
  box-sizing: border-box; /* ensure padding still works */
}

/* Make the header edge-to-edge */
.timeline-header {
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  width: 100vw;
  box-sizing: border-box;
  /* preserve your existing padding */
  padding: 1rem 0;
}

/* And have the inner content stretch too (remove max-width) */
.timeline-header-content {
  display: flex;
  align-items: center;
  justify-content: center; /* or space-between if you want them apart */
  width: 100%;
  padding: 0 1rem;          /* your horizontal gutter */
}

/* Example: if you still want to cap the text line-length, you can add */
.timeline-title {
  max-width: 1200px;
  margin: 0 auto;
}

/* Make footer span the full viewport width */
footer {
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  width: 100vw;
}

/* Inside-padding (so content doesn't butt the edge) */
footer > div {
  padding: 0 0rem;  /* adjust side-padding as desired */
}

footer {
  border: none !important;
  box-shadow: none !important;
  background-image: none !important;
}

/* Hide any <hr> inside the footer (just in case) */
footer hr {
  display: none !important;
}

.timeline-item {
  /* remove any overflow hiding */
  overflow: visible !important;
}

.timeline-sort-button {
  all: unset;
  cursor: pointer;
  background: none;
}

.timeline-sort-icon {
  background: none;
}

.profile-header .profile-title {
  word-spacing: 1rem; /* tweak this value to taste */
}

/* Landing‐page title above conversation starters */
.chatbot-container .starters-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1rem;
}

.chatbot-landing-title {
  font-size: 2rem;       /* large title */
  font-weight: 700;
  margin-bottom: 1rem;
  text-align: center;
  color: #000;           /* ensure it's black */
}

.chatbot-container {
  position: relative;
  width: 100%;
  max-width: 800px;
  margin: auto;
  display: flex;
  flex-direction: column;
}

.chat-view-fixed {
  display: flex;
  flex-direction: column;
}

.messages-container {
  padding: 12px;
  display: flex;
  flex-direction: column;
}

.chat-area {
  overflow-y: auto;
  flex: 1;
}

/* always keep input bar visible at bottom of container */
.chat-input-fixed {
  background: #fff;
  z-index: 10;
  padding: 8px;
}

/* Mobile specific styles */
@media (max-width: 600px) {
  .chatbot-container.focused {
    height: 100vh;
  }
  
  .chat-view-fixed {
    /* Add a bottom margin to ensure the input doesn't overlap content */
    padding-bottom: 60px; 
  }
  
  .starters-container {
    display: flex !important;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    width: 100%;
  }
  
  .messages-container {
    padding: 12px;
    padding-bottom: 75px; /* Extra padding to make sure content isn't hidden behind input */
  }
}


@media (max-width: 600px) {
  .gh-spacer {
    height: 180px;
  }
}

@media (max-width: 620px) {
  /* The fixed container that holds your ChatInput */
  .chat-input-fixed {
    margin-top: -10px !important;
    padding-top: -10px !important;   
    padding-right: 10px;
    padding-left: 10px;
    padding-bottom: 20px !important;
    background-color: #2563eb;
  }

  /* Your <form> inside it */
  .chat-input-form {
    height: 44px;           /* keep it a nice slim strip */
    margin: 0 auto;         /* center horizontally */
    max-width: 120% !important;
    display: flex;
    align-items: center;    /* vertically center the field & button */
  }
  

  /* The <input> itself */
  .chat-input-field {
    height: 110%;
    border-radius: 11px;    /* pill shape */
    border-color: "#BFBFBF" !important;
    border-width: 0.8px;
    flex: 1;
    font-size: 16px;
  }

  /* Reposition the send‐button inside that pill */
  .chat-input-submit {
    position: absolute;
    right: 3px;
    top: 50%;
    transform: translateY(-50%);
  }
}

.messages-container,
.messages-wrapper {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.chatbot-container .starters-container button {
  border: 1px solid #e5e7eb !important;
}

/* Conversation starters styling */
.chatbot-container .starters-container {
  /* Changed from display: none to flex */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  background-color: #f9fafb;
  border-radius: 12px;
  margin-bottom: 1rem;
  width: 100%;
  box-sizing: border-box;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.chatbot-container .starters-container.enter {
  opacity: 1;
  transform: translateY(0);
}

.chatbot-container .starters-wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 30px;
  width: 100%;
  padding: 10px;
  justify-content: center;
  align-items: center;
}

/* In focused mode show the starters if they exist */
.chatbot-container.focused .starters-container {
  display: flex;
  z-index: 500;
}

/* Fix for mobile views */
@media (max-width: 600px) {
  .chatbot-container .starters-wrapper {
    grid-template-columns: 1fr;
    padding: 1rem;
  }
}

/* Mobile chatbot specific styles */
.chatbot-container.focused .starters-container {
  display: flex !important;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 1.5rem;
  box-sizing: border-box;
  overflow-y: auto;
  background-color: #f9fafb;
}

/* Mobile conversation starters */
@media (max-width: 600px) {
  .starters-container.enter {
    opacity: 1;
    transform: translateY(0);
    animation: fadeIn 0.3s ease-out;
  }
  
  .chatbot-container .starters-wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap: 16px;
    padding: 10px;
  }
  
  .chat-view-fixed .starters-container {
    padding-bottom: 65px !important; /* Ensure space at bottom for scrolling */
    background-color: #ffffff !important;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Fix for any inline styles */
.chat-view-fixed .starters-container {
  display: flex !important;
  overflow-y: auto !important;
}

/* Ensure the whole panel is shown and given a light grey backdrop */
@media (min-width: 601px) {
  .chatbot-container .starters-container {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 2rem !important;
    border-radius: 12px;
    width: 100%;
    max-width: 640px;
    margin: 1rem auto 2rem;
    box-sizing: border-box;
    opacity: 1 !important;
    transform: translateY(0) !important;
    background-color: #ffffff !important;

  }

  /* Ensure your "Find out more ..." title is visible in dark text */
  .chatbot-container .starters-container h2 {
    color: #111827 !important;
    font-size: 1.5rem !important;
    margin-bottom: 1rem !important;
  }

  /* Make each white tile button stand out */
  .chatbot-container .starters-container .starters-wrapper button {
    background-color: #ffffff !important;
    border: 1px solid #e5e7eb !important;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1) !important;
    color: #333 !important;
  }
}

.desktop-starters-title {
  font-size: 104px !important;   /* or whatever pixel value you like */
  margin-bottom: 3rem;
  font-weight: 700;
  color: #111827;
}

.chatbot-container .starters-container h2 {
  font-size: 35px !important;
}

.chatbot-container .starters-container h2 {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* in case it still overflows the container */
}

@keyframes slideInUp {
  from { opacity: 0; transform: translateY(200px); }
  to   { opacity: 1; transform: translateY(0); }
}
@keyframes slideOutDown {
  from { opacity: 1; transform: translateY(0); }
  to   { opacity: 0; transform: translateY(200px); }
}

/* Animation keyframes for sliding in from bottom */
@keyframes slideInFromBottom {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Animation keyframes for sliding out to bottom */
@keyframes slideOutToBottom {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(50px);
  }
}

/* Apply animations to the starters container */
.chatbot-container .starters-container {
  animation-duration: 0.7s;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1); /* Same timing as chatbot */
  animation-fill-mode: forwards;
  transform-origin: center bottom;
}

.chatbot-container .starters-container.entering {
  animation-name: startersAppear;
}

@keyframes startersAppear {
  0% {
    opacity: 0;
    transform: translateY(15px) scale(0.98);
  }
  70% {
    opacity: 1;
    transform: translateY(-5px) scale(1.01);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Title animation */
.desktop-starters-title {
  animation-duration: 0.8s;
  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  animation-fill-mode: backwards; /* Hide before animation starts */
  transform-origin: center bottom;
  opacity: 0;
}

.entering .desktop-starters-title {
  animation-name: titleAppear;
  animation-delay: 0.15s; /* Slight delay after container */
  opacity: 1;
}

@keyframes titleAppear {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  60% {
    opacity: 1;
    transform: translateY(-7px) scale(1.02);
  }
  80% {
    transform: translateY(3px) scale(0.99);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Individual conversation starter buttons */
.starters-wrapper {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 15px;
}

.starters-wrapper button {
  animation-duration: 0.6s;
  animation-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1); /* Bouncy effect */
  animation-fill-mode: backwards; /* Hide before animation starts */
  opacity: 0;
  transform: translateY(20px);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.entering .starters-wrapper button {
  animation-name: buttonAppear;
  opacity: 1;
  transform: translateY(0);
}

/* Create staggered animation for buttons */
.entering .starters-wrapper button:nth-child(1) { animation-delay: 0.3s; }
.entering .starters-wrapper button:nth-child(2) { animation-delay: 0.35s; }
.entering .starters-wrapper button:nth-child(3) { animation-delay: 0.4s; }
.entering .starters-wrapper button:nth-child(4) { animation-delay: 0.45s; }
.entering .starters-wrapper button:nth-child(5) { animation-delay: 0.5s; }
.entering .starters-wrapper button:nth-child(6) { animation-delay: 0.55s; }
.entering .starters-wrapper button:nth-child(7) { animation-delay: 0.6s; }
.entering .starters-wrapper button:nth-child(8) { animation-delay: 0.65s; }

@keyframes buttonAppear {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
  }
  70% {
    opacity: 1;
    transform: translateY(-5px) scale(1.03);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

.chat-view-fixed .starters-container {
  justify-content: flex-end !important;
}
.chat-view-fixed .starters-container {
  justify-content: flex-end;
  padding-bottom: 0rem !important; /* increase as needed */
}

@media (max-width: 600px) {
  /* Container just above the input bar */
  .mobile-starters-container {
    position: absolute;
    left: 0;
    right: 0;
    bottom: calc(var(--keyboard-height, 0px) + var(--bar-height, 64px));
    padding: 0 10px;
    box-sizing: border-box;
  }

  /* Horizontal scroll row */
  .mobile-starters-scroll {
    display: flex;
    overflow-x: auto;
    gap: 8px;
    padding-bottom: 8px;
  }

  /* Each prompt tile */
  .mobile-starter-button {
    flex: 0 0 auto;
    width: 120px;
    background-color: #ffffff;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    padding: 8px;
    text-align: center;
    cursor: pointer;
  }

  .mobile-starter-button:active {
    background-color: #f0f0f0;
  }

  /* Two‐line clamp */
  .mobile-starter-text {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 14px;
    line-height: 1.2;
    color: #333;
  }

  /* Hide desktop‐only wrappers */
  .starters-wrapper {
    display: none !important;
  }
}



/* Make sure the container takes space even when hidden to prevent layout shifts */
@media (max-width: 600px) {
  .contributions-container.hidden {
    pointer-events: none;
  }
}

@media (min-width: 601px) {
  .github-desktop-contributions {
    margin-top: 5px;     /* Or whatever negative value feels right */
    padding-top: 0;        /* Remove any extra padding */
    margin-bottom: 15px;
    transform: scale(0.90) !important;
  }
  .github-desktop-contributions .content-container {
    padding-top: 0 !important;
    margin-top: 0 !important;
  }
}

.fade-fade {
  opacity: 1;
  transition: opacity 0.4s cubic-bezier(0.33,1,0.68,1);
  pointer-events: auto;
}

.fade-fade.hide {
  opacity: 0;
  pointer-events: none;
}

/* Skills Component Styles - Categorized layout */
.skills-wrapper {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 25px; /* Reduced from 40px to 25px for closer spacing */
  margin: 40px auto;
  padding: 0;
  margin-bottom: 80px; /* Keep existing whitespace below the entire skills section */
}

.skill-category {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 10px; /* Reduced from 20px to 10px */
}

/* Last skill category needs more bottom margin */
.skill-category:last-child {
  margin-bottom: 60px; /* Keep the extra space for the last category */
}

.skill-category-title {
  font-size: 1.2rem; /* Smaller title size to match other sections */
  font-weight: 600; /* Slightly lighter weight */
  color: #000;
  margin: 0 0 5px 15px;
  font-family: 'SF Pro Display', system-ui, sans-serif;
}

/* Individual skill category containers - keep existing properties */
.skills-container {
  width: 100%;
  max-width: 700px; /* Increased width (was 600px) */
  margin: 0 auto;
  padding: 20px 0;
  background-color: #ffffff;
  position: relative;
  overflow: hidden; /* Hide overflow for scroll animation */
}

/* Add edge fade effect */
.skills-container::before,
.skills-container::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  width: 60px;
  z-index: 2;
  pointer-events: none; /* Allow clicking through the fade */
}

.skills-container::before {
  left: 0;
  background: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
}

.skills-container::after {
  right: 0;
  background: linear-gradient(to left, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
}

.skills-scroll-container {
  width: 100%;
  overflow-x: hidden; /* Hidden overflow is essential for smooth infinite scrolling */
  scrollbar-width: none; /* Hide scrollbar for Firefox */
  -ms-overflow-style: none; /* Hide scrollbar for IE/Edge */
  margin: 0;
  padding: 10px 0;
  position: relative; /* For z-index */
  z-index: 1;
}

/* Hide scrollbar for Chrome/Safari */
.skills-scroll-container::-webkit-scrollbar {
  display: none;
}

.skills-row {
  display: flex;
  gap: 20px; /* Reduced gap to fit more items */
  padding: 0 30px; /* Increased padding for edge fade */
  white-space: nowrap;
  will-change: transform; /* Optimize for animation performance */
}

.skill-item {
  flex: 0 0 130px; /* Slightly wider items for the wider container */
  min-width: 130px; /* Ensure consistency */
  max-width: 130px; /* Fixed width is important for smooth infinite scroll */
  display: flex;
  flex-direction: column;
  gap: 8px; /* Slightly reduced gap */
}

.skill-info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  white-space: nowrap;
}

.skill-name {
  font-size: 0.9rem; /* Smaller font to fit in narrower items */
  font-weight: 600;
  color: #000;
  font-family: 'SF Pro Display', system-ui, sans-serif;
}

.skill-level {
  font-size: 0.75rem; /* Smaller font to fit in narrower items */
  font-weight: 500;
  color: #666;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  margin-left: 8px;
}

.skill-bar-container {
  height: 6px; /* Slightly smaller bar */
  background-color: #f0f0f0;
  border-radius: 3px;
  overflow: hidden;
  width: 100%;
}

.skill-bar {
  height: 100%;
  /* background gradient removed - now dynamically set per category */
  border-radius: 3px;
  width: 0%; /* Initial width before animation */
  transition: width 1s cubic-bezier(0.33, 1, 0.68, 1);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .skills-container {
    max-width: 550px; /* Increased from 450px */
  }
  
  .skill-item {
    flex: 0 0 130px; /* Keep same width for consistency */
    min-width: 130px;
    max-width: 130px;
  }
}

@media (max-width: 480px) {
  .skills-container {
    max-width: 350px; /* Increased from 300px */
  }
  
  .skill-item {
    flex: 0 0 130px; /* Keep same width for consistency */
    min-width: 130px;
    max-width: 130px;
  }
  
  .skills-row {
    gap: 15px; /* Even smaller gap on mobile */
  }
  
  /* Narrower edge fade on mobile */
  .skills-container::before,
  .skills-container::after {
    width: 40px;
  }
}

/* Staged Scroll Styles */
.stage-section {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
}

.stage-content {
  width: 100%;
  max-width: 700px;
  padding: 0 20px;
  box-sizing: border-box;
  position: relative;
  z-index: 2;
}

/* Scroll indicators */
.scroll-indicator {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 40px;
  opacity: 0.7;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: 10;
  animation: pulse 2s infinite ease-in-out;
}

.scroll-indicator.up {
  top: 20px;
}

.scroll-indicator.down {
  bottom: 20px;
}

@keyframes pulse {
  0% {
    transform: translateX(-50%) scale(1);
    opacity: 0.7;
  }
  50% {
    transform: translateX(-50%) scale(1.1);
    opacity: 1;
  }
  100% {
    transform: translateX(-50%) scale(1);
    opacity: 0.7;
  }
}

/* Stage transitions */
@keyframes fadeOutUp {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-30px);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOutDown {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(30px);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Styles for special sections within stages */
.stage-profile-header {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.stage-profile-header .profile-image {
  max-width: 280px;
  width: 60%;
  height: auto;
  border-radius: 12px;
  object-fit: cover;
  display: block;
}

.stage-profile-header .profile-title {
  margin: 30px 0 0 0;
  color: #000000;
  font-size: clamp(2rem, 6vw, 3rem);
  font-weight: 800;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  letter-spacing: -1px;
  max-width: 800px;
  width: 100%;
  text-align: center;
}

/* Mobile optimizations */
@media (max-width: 600px) {
  .stage-content {
    padding: 0 15px;
  }
  
  .stage-profile-header .profile-image {
    max-width: 220px;
  }
  
  .stage-profile-header .profile-title {
    font-size: 1.8rem;
    margin-top: 20px;
  }
  
  .scroll-indicator {
    width: 30px;
    height: 30px;
  }
  
  .scroll-indicator.up {
    top: 15px;
  }
  
  .scroll-indicator.down {
    bottom: 15px;
  }
}

/* Timeline transition animations */
.timeline-container {
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

@keyframes slideUpIn {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.timeline-container.animate-in {
  animation: slideUpIn 0.8s ease-out forwards;
}

/* Stage transition animations */
@keyframes slideUpOut {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(-30%);
    opacity: 0;
  }
}

.stage-exit {
  animation: slideUpOut 0.6s ease-in-out forwards;
}

/* Natural scroll transition effect */
.smooth-scroll-transition {
  transition: all 0.5s ease-out;
}

/* Desktop/Mobile conditional content */
.desktop-only-content,
.mobile-only-content {
  width: 100%;
}

/* Default: hide mobile content on desktop */
.mobile-only-content {
  display: none;
}

/* On mobile: hide desktop content and show mobile content */
@media (max-width: 600px) {
  .desktop-only-content {
    display: none;
  }
  
  .mobile-only-content {
    display: block;
  }
}

/* Ensure both mobile and desktop GitHub contribution areas are styled properly */
.github-desktop-contributions,
.github-mobile-contributions {
  margin-top: 5px;
  padding-top: 0;
  margin-bottom: 15px;
  transform: scale(0.90);
}

.github-desktop-contributions .content-container,
.github-mobile-contributions .content-container {
  padding-top: 0 !important;
  margin-top: 0 !important;
}

/* Chat close button styles */
.chat-close-button,
.chat-close-button-mobile {
  opacity: 0.7;
  transition: opacity 0.2s ease, background-color 0.2s ease;
}

.chat-close-button:hover,
.chat-close-button-mobile:hover {
  opacity: 1;
  background-color: #e5e5e5;
}

/* Smooth exit animation for chat interface */
.chatbot-container {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.chatbot-container.exiting {
  transform: translateY(20px);
  opacity: 0;
}

/* Message container exit animation */
.messages-container {
  transition: opacity 0.25s ease;
}

.messages-container.exiting {
  opacity: 0;
}

/* Chat view transition for mobile */
.chat-view-fixed {
  transition: opacity 0.25s ease, transform 0.25s ease;
}

.chat-view-fixed.exiting {
  opacity: 0;
  transform: translateY(10px);
}

/* Adjust quotes spacing for desktop */
@media (min-width: 601px) {
  .home-container .github-desktop-contributions {
    margin-bottom: -120px !important; /* Force a large negative margin */
    transform: scale(0.90) !important; /* Make it slightly smaller */
    position: relative !important;
    z-index: 0 !important; /* Lower z-index so quotes can overlap */
  }
  
  .home-container section:has(.quotes-container) {
    margin-top: -100px !important; /* Force a large negative top margin on the quotes section */
    position: relative !important;
    z-index: 1 !important; /* Higher z-index to overlap contributions */
  }
  
  /* Adjust the quotes container internal spacing */
  .home-container .quotes-container {
    margin-top: -60px !important; /* Additional negative margin inside the container */
    padding-top: 0 !important;
  }
  
  /* Make sure the GitHub contributions element doesn't get cut off */
  .home-container .github-desktop-contributions .content-container {
    padding-bottom: 80px !important; /* Add padding to prevent cutting off contributions */
  }
}