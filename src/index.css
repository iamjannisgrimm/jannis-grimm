/* Reset and box-sizing */
*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body,
#root,
.app-container,
.home-container {
  display: block !important;
  height: auto !important;
  min-height: 0 !important;
  overflow: visible !important;
}

/* 2) Let the body scroll naturally */
body {
  overflow-y: auto !important;
}

/* 3) Remove any hidden overflow on blurrable-content */
.blurrable-content {
  overflow: visible !important;
}

/* 4) Ensure each section stacks vertically */
.center-container,
.content-container,
.timeline-container {
  position: static !important;
  top: auto !important;
  bottom: auto !important;
  left: auto !important;
  right: auto !important;
  transform: none !important;
}
/* CSS Variables */
:root {
  --font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  --font-size-base: 16px;
  --line-height: 1.5;
  --color-text-light: rgba(255, 255, 255, 0.87);
  --color-bg-dark: #242424;
  --color-link: #646cff;
  --color-link-hover: #535bf2;
  --spacing: 1rem;
}

/* Make page height auto so it grows with content */
html, body, #root {
  height: auto;
  width: 100%;
  background-color: #ffffff;
}

/* Body uses normal document flow */
body {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  line-height: var(--line-height);
  color: var(--color-text-light);
  background-color: var(--color-bg-dark);
  color-scheme: light dark;
  display: block;
}

/* Links */
a {
  font-weight: 500;
  color: var(--color-link);
  text-decoration: none;
}
a:hover {
  color: var(--color-link-hover);
}

/* Buttons */
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font: inherit;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: var(--color-link);
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

/* App container layout */
.app-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: auto;
  width: 100%;
  padding: 0 var(--spacing);
  text-align: center;
}

/* Home view wrapper */
.home-container {
  background-color: #ffffff;
  width: 100%;
  min-height: auto;
  overflow-x: hidden;
  display: block;
  margin: 0 auto;
  padding: 0;
}

/* Responsive typography */
h1 {
  font-size: clamp(2rem, 8vw, 5rem);
  font-weight: bold;
  line-height: 1.1;
}

/* ProfileHeader component */
.profile-header {
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0px 0 40px;
  width: 100%;
  text-align: center;
}
.profile-header .profile-title {
  margin: 0 0 20px 0;
  color: #000000;
  font-size: clamp(2rem, 6vw, 3rem);
  font-weight: 800;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  letter-spacing: -1px;
  max-width: 800px;
  width: 100%;
}
.profile-header .profile-image {
  max-width: 300px;
  width: 60%;
  height: auto;
  border-radius: 12px;
  object-fit: cover;
  display: block;
}

/* GitHubContributions component */
.github-contributions {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin-top: 1rem;
  padding: 0;
}
/* Calendar overrides */
.react-activity-calendar text {
  fill: black !important;
  font-weight: bold;
}
.react-activity-calendar {
  color: black !important;
  max-width: 100%;
  margin: 0 auto;
}
.react-activity-calendar span,
.react-activity-calendar summary,
.react-activity-calendar button {
  color: black !important;
}
@media (max-width: 800px) {
  .react-activity-calendar {
    overflow-x: auto;
  }
}
/* Wrapper for the calendar */
.github-calendar-container {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow-x: auto;
  margin: 0 auto;
  padding: 0;
}

/* Timeline section spacing */
.timeline-container {
  width: 100%;
  margin-top: 2rem;
}

/* ──────────────────────────────────────────────────────────────────────────
   Chatbot (Home-level wrapper)
   ────────────────────────────────────────────────────────────────────────── */
   .home-chat-wrapper {
    width: 100%;
    max-width: 1200px;
    margin: 2rem auto;          /* adjust vertical spacing here */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;         /* so absolute children position to this */
  }
  
  /* internal Chatbot panel */
  .chatbot-wrapper {
    width: 100%;
    max-width: 800px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
    will-change: transform;
  }
  
  /* messages popup above the input */
  .chatbot-messages {
    position: absolute;
    bottom: 100%;
    left: 0;
    right: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    margin-bottom: 20px;
    pointer-events: auto;
  }
  
  /* the input trigger sits in-flow by default */
  .chatbot-input-trigger {
    position: relative;
    margin: 2rem auto;
    width: 100%;
    max-width: 800px;
    cursor: pointer;
    transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
  }
  
  /* when anchored, the input floats to the bottom of its container */
  .chatbot-input-trigger.anchored {
    position: absolute !important;
    bottom: 0 !important;
    left: 50% !important;
    transform: translateX(-50%) !important;
    margin: 0 !important;
    width: 90%;
    max-width: 500px;
    cursor: default;
  }
  
  /* wrap the <form> so it can center its contents */
  .chatbot-input-wrapper {
    display: flex;
    justify-content: center;
    width: 100%;
  }
  
  /* ──────────────────────────────────────────────────────────────────────────
     ChatInput form
     ────────────────────────────────────────────────────────────────────────── */
  .chat-input-form {
    display: flex;
    width: 100%;
    max-width: 750px;
    position: relative;
    margin: 0 auto;             /* perfect horizontal centering */
    transition: width 0.3s ease-in-out, max-width 0.3s ease-in-out;
  }

  
  /* the text field */
  .chat-input-field {
    width: 100%;
    padding: 12px 50px 12px 20px;
    border-radius: 10px;
    border: 1.4px solid #d1d5db;
    font-size: 16px;
    background-color: #ffffff;
    color: #111827;
    outline: none;
    font-family: 'SF Pro Display', system-ui, sans-serif;
    transition: all 0.3s ease-in-out, border 0.3s ease-in-out, padding 0.3s ease-in-out;
  }
  /* the send-button icon */
  .chat-input-submit {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    padding: 4px;
    border: none;
    background: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: default;
  }
  .chat-input-submit.active {
    cursor: pointer;
  }
  .chat-input-submit svg {
    stroke: #9ca3af;
    transition: stroke 0.2s ease;
  }
  .chat-input-submit.active svg {
    stroke: #2563eb;
  }

/* Light mode overrides */
@media (prefers-color-scheme: light) {
  :root {
    --color-text-light: #213547;
    --color-bg-dark: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/* Tighten header & GitHub spacing on shorter viewports */
/* Tighten header & GitHub spacing on shorter viewports */
@media (max-height: 800px) {
  .profile-header {
    /* was 80px 0 40px */
    padding: 60px 0 30px;
  }
  .github-contributions {
    /* was margin-top: var(--spacing) */
    margin-top: 0.5rem;
  }
  .profile-title {
    /* shrink gap between title & image */
    margin-bottom: 1rem;  /* was ~20px */
  }
}

@media (max-height: 600px) {
  .profile-header {
    padding: 40px 0 20px;
  }
  .github-contributions {
    margin-top: 0.25rem;
  }
  .profile-title {
    margin-bottom: 0.5rem;
  }
}
/* Fade out everything except the chat bar when active */
.content-wrapper {
  transition: opacity 0.5s ease-in-out;
}
.content-wrapper.fade {
  opacity: 0.2;
}



/* Hero “top-section” covering full viewport */
.top-section {
  background-color: #ffffff; /* white backdrop */
  width: 100%;
  min-height: 100vh;         /* always at least one screen tall */
  display: flex;
  flex-direction: column;
  justify-content: center;   /* center its children vertically */
}


/* (Existing chatbot-fixed-wrapper + chatbot-fixed-container rules remain unchanged) */

.top-section {
  transition: opacity 0.3s ease-in-out;
}
.top-section.fade {
  opacity: 0.2;
}





/* ─── Animations ────────────────────────────────────────────────────────── */
@keyframes fadeSlideUp {
  from { opacity: 1; transform: translateY(0); }
  to   { opacity: 0; transform: translateY(-50px); }
}

@keyframes fadeSlideIn {
  from { opacity: 0; transform: translateY(50px); }
  to   { opacity: 1; transform: translateY(0); }
}

/* Top‐section (header + GitHub) slides up & fades out when .fade is added */
/* ─── Smooth Fade/Slide Animations ─────────────────────────────────────── */

/* Top‐section (header + GitHub) transitions */
.top-section {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 1;
  transform: translateY(0);
}
.top-section.fade {
  opacity: 0;
  transform: translateY(-50px);
}

/* Conversation‐starters container transitions */
.starters-container {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 0;
  transform: translateY(50px);
}
.starters-container.enter {
  opacity: 1;
  transform: translateY(0);
}

/* ─── Floating Chatbot (bottom‐center) ───────────────────────────────────────── */
.chatbot-fixed-wrapper {
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) translateY(0);
  width: 100%;
  max-width: 1200px;
  pointer-events: all;
  z-index: 1000;
  transition: transform 0.4s ease, opacity 0.4s ease;
}
.chatbot-fixed-wrapper.hidden {
  transform: translateX(-50%) translateY(100%);
  opacity: 0;
  pointer-events: none;
}

.chatbot-fixed-container {
  display: flex;
  justify-content: center;
  width: 100%;
  padding: 2rem 10rem; /* 2rem top/bottom, 1rem left/right */
}

/* If the viewport is too narrow, reduce padding so it never feels cramped */
/* ─── Chatbot Internals ─────────────────────────────────────────────────────── */
.chatbot-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.chatbot-messages {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  margin-bottom: 20px;
  pointer-events: auto;
}

.chatbot-input-trigger {
  width: 100%;
  max-width: 1200px;
  margin: 2rem auto;
  position: relative;
  transition: all 1.5s cubic-bezier(0.4,0,0.2,1);
}

/* ─── ChatInput Form ───────────────────────────────────────────────────────── */
.chat-input-form {
  display: flex;
  width: min(650px, calc(100% - 10px));
  margin: 0 auto;           /* center it */
  position: relative;
  transition: width 0.3s ease-in-out;
}

/* If you want extra breathing room around the form, adjust the container: */
.chatbot-fixed-container {
  padding: 2rem 5px;         /* 1rem top/bottom, 5px left/right */
}
/* If viewport is narrower than 410px, make form fill available space */
.chat-input-field {
  flex: 1;
  padding: 16px 20px;
  border-radius: 12px;
  border: 1.4px solid #d1d5db;
  font-size: 18px;
  background-color: #ffffff;
  color: #111827;
  outline: none;
  font-family: 'SF Pro Display', system-ui, sans-serif;
  transition: all 0.3s ease-in-out;
}

.chat-input-submit {
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  padding: 4px;
  border: none;
  background: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: default;
}
.chat-input-submit.active {
  cursor: pointer;
}
.chat-input-submit svg {
  transition: stroke 0.2s ease;
}
.chat-input-submit.active svg {
  stroke: #2563eb;
}

/* ─── Conversation Starters Animation ───────────────────────────────────────── */
.starters-container {
  transition: opacity 0.5s ease, transform 0.5s ease;
  opacity: 0;
  transform: translateY(50px);
}
.starters-container.enter {
  opacity: 1;
  transform: translateY(0);
}



/* ─── Timeline Layout & Typography ───────────────────────────────────────── */

/* Apply SF Pro Display to entire timeline */
.timeline-container {
  font-family: 'SF Pro Display', system-ui, -apple-system, BlinkMacSystemFont,
               'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  width: 100%;
  margin-top: 2rem;
}

/* Header & Sort Button */
.timeline-header {
  display: flex;
  justify-content: center;
  background-color: #2A2A2A; /* or whatever your default bg */
  color: #FFFFFF;            /* default text color */
  padding: 1rem 0;
}

.timeline-header-content {
  display: flex;
  align-items: center;
  gap: 1rem;
  max-width: 1200px;
  width: 100%;
  padding: 0 1rem;
}

.timeline-title {
  flex: 1;
  margin: 0;
  font-size: clamp(1.5rem, 4vw, 2rem);
  font-weight: 700;
  text-align: center;
}

.timeline-sort-button {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
}

.timeline-sort-icon {
  width: 1.5rem;
  height: 1.5rem;
  transition: transform 0.3s ease;
}

/* Items List */
.timeline-items {
  display: flex;
  flex-direction: column;
}

/* Single Item Wrapper (for fade/scale via inline style) */
.timeline-item-wrapper {
  width: 100%;
}

/* Single Item Layout */
.timeline-item {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 1.25rem;
  padding: 2rem 1rem;
  box-sizing: border-box;
  overflow: hidden;
}

/* Vertical timeline line */
.timeline-item::before {
  content: "";
  position: absolute;
  left: 80px;
  top: 0;
  width: 4px;
  height: 100%;
  background: gray;
  z-index: 0;
}

/* Left column: date & icon */
.timeline-left {
  flex-shrink: 0;
  width: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.timeline-date {
  font-size: 0.875rem;
  color: gray;
  margin-bottom: 0.5rem;
  white-space: nowrap;
}

.timeline-icon {
  width: 60px;
  height: 60px;
  object-fit: contain;
}

/* Right content column */
.timeline-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  z-index: 1;
}

.timeline-content h3 {
  margin: 0;
  font-size: 1.75rem;
  font-weight: 800;
}

.timeline-content p.subtitle {
  margin: 0;
  font-size: 1.125rem;
  font-weight: 600;
  color: #555;
}

.timeline-content p.description {
  margin: 0;
  line-height: 1.5;
}

.timeline-content img {
  max-width: min(650px, 70vw);
  width: 100%;
  height: auto;
  border-radius: 8px;
}

/* Tech stack row */
.timeline-techstack {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.timeline-techstack img {
  width: 24px;
  height: 24px;
}

/* Learn more link */
.timeline-learnmore {
  font-weight: 500;
  text-decoration: none;
  color: var(--color-link);
  transition: opacity 0.2s ease;
}

.timeline-learnmore:hover {
  opacity: 1;
}

/* Expandable detail button */
.timeline-expand-button {
  background-color: var(--color-link);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 0.5rem 1rem;
  cursor: pointer;
}

/* Detail panel */
.timeline-detail {
  overflow: hidden;
  transition: max-height 0.5s ease, opacity 0.5s ease;
  max-height: 0;
  opacity: 0;
}

.timeline-detail.open {
  max-height: 10000px;
  opacity: 1;
}

/* Responsive tweaks */
@media (max-width: 768px) {
  .timeline-item {
    flex-direction: column;
    padding: 1.5rem 1rem;
  }
  .timeline-left {
    flex-direction: row;
    width: 100%;
    justify-content: flex-start;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  .timeline-item::before {
    left: 20px;
  }
}

